import { defineModuleApi } from "@dashlane/framework-contracts";
import {
  AuthenticationFlowStatusQuery,
  GetSsoProviderInfoQuery,
  GetSsoUserSettingsQuery,
} from "./authentication-flow.queries";
import {
  CancelDeviceTransferRequestCommand,
  ChangeAccountEmailCommand,
  ChangeTwoFactorAuthenticationOtpTypeCommand,
  ClearErrorCommand,
  InitiateAutologinWithSSOCommand,
  InitiateLoginWithSSOCommand,
  LockCommand,
  LoginViaSSOCommand,
  LogoutCommand,
  ResendEmailTokenCommand,
  ResendPushNotificationCommand,
  RetryWebAuthnAuthenticationCommand,
  SendAccountEmailCommand,
  SendMasterPasswordCommand,
  SubmitBackupCodeCommand,
  SubmitEmailTokenCommand,
  SubmitPinCodeCommand,
  SubmitTotpCommand,
  SwitchToDashlaneAuthenticatorCommand,
  SwitchToDevicetoDeviceAuthenticationCommand,
  SwitchToEmailTokenCommand,
  SwitchToMasterPasswordCommand,
  SwitchToPinCodeCommand,
  WebAuthnAuthenticationFailCommand,
} from "./authentication-flow.commands";
export const authenticationFlowApi = defineModuleApi({
  name: "authenticationFlow" as const,
  commands: {
    changeLogin: ChangeAccountEmailCommand,
    changeTwoFactorAuthenticationOtpType:
      ChangeTwoFactorAuthenticationOtpTypeCommand,
    clearError: ClearErrorCommand,
    cancelDeviceTransferRequest: CancelDeviceTransferRequestCommand,
    resendEmailToken: ResendEmailTokenCommand,
    resendPushNotification: ResendPushNotificationCommand,
    sendAccountEmail: SendAccountEmailCommand,
    sendMasterPassword: SendMasterPasswordCommand,
    submitPinCode: SubmitPinCodeCommand,
    submitBackupCode: SubmitBackupCodeCommand,
    submitEmailToken: SubmitEmailTokenCommand,
    submitTotp: SubmitTotpCommand,
    switchToDevicetoDeviceAuthentication:
      SwitchToDevicetoDeviceAuthenticationCommand,
    switchToDashlaneAuthenticator: SwitchToDashlaneAuthenticatorCommand,
    switchToMasterPasswordCommand: SwitchToMasterPasswordCommand,
    switchToEmailToken: SwitchToEmailTokenCommand,
    switchToPinCode: SwitchToPinCodeCommand,
    retryWebAuthnAuthentication: RetryWebAuthnAuthenticationCommand,
    webAuthnAuthenticationFail: WebAuthnAuthenticationFailCommand,
    logout: LogoutCommand,
    lockSession: LockCommand,
    loginViaSSO: LoginViaSSOCommand,
    initiateLoginWithSSO: InitiateLoginWithSSOCommand,
    initiateAutologinWithSSOCommand: InitiateAutologinWithSSOCommand,
  },
  queries: {
    authenticationFlowStatus: AuthenticationFlowStatusQuery,
    getSsoUserSettings: GetSsoUserSettingsQuery,
    getProviderInfo: GetSsoProviderInfoQuery,
  },
  events: {},
});
export type AuthenticationFlowApi = typeof authenticationFlowApi;
